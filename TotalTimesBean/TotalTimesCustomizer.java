import java.beans.*;
import java.io.*;
import javax.swing.*;

public class TotalTimesCustomizer extends javax.swing.JPanel implements java.beans.Customizer{
    private TotalTimes totalTimes;
    private static java.text.NumberFormat dollarFormat = java.text.NumberFormat.getInstance();
    
    /** Creates new customizer TimeOutCustomizer */
    public TotalTimesCustomizer() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        selectButtonGroup = new javax.swing.ButtonGroup();
        tabbedPane = new javax.swing.JTabbedPane();
        optionPanel = new javax.swing.JPanel();
        optionInputPanel = new javax.swing.JPanel();
        countdownCheckBox = new javax.swing.JCheckBox();
        countdownTextField = new javax.swing.JTextField();
        countdownLabel = new javax.swing.JLabel();
        cashCheckBox = new javax.swing.JCheckBox();
        cashTextField = new javax.swing.JTextField();
        cashLabel = new javax.swing.JLabel();
        optionButtonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(238, 221));
        setPreferredSize(new java.awt.Dimension(387, 254));
        tabbedPane.setMinimumSize(new java.awt.Dimension(238, 221));
        tabbedPane.setPreferredSize(new java.awt.Dimension(387, 254));
        optionPanel.setLayout(new java.awt.BorderLayout());

        optionInputPanel.setLayout(new java.awt.GridBagLayout());

        countdownCheckBox.setText("Countdown to ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        optionInputPanel.add(countdownCheckBox, gridBagConstraints);

        countdownTextField.setColumns(4);
        countdownTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        countdownTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        optionInputPanel.add(countdownTextField, gridBagConstraints);

        countdownLabel.setText(" minutes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        optionInputPanel.add(countdownLabel, gridBagConstraints);

        cashCheckBox.setText("Count $");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        optionInputPanel.add(cashCheckBox, gridBagConstraints);

        cashTextField.setColumns(4);
        cashTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        optionInputPanel.add(cashTextField, gridBagConstraints);

        cashLabel.setText(" per hour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        optionInputPanel.add(cashLabel, gridBagConstraints);

        optionPanel.add(optionInputPanel, java.awt.BorderLayout.CENTER);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        optionButtonPanel.add(saveButton);

        optionPanel.add(optionButtonPanel, java.awt.BorderLayout.SOUTH);

        tabbedPane.addTab("Options", optionPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(tabbedPane, gridBagConstraints);

    }//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        saveTimeOutSettings();
    }//GEN-LAST:event_saveButtonActionPerformed

    public void setObject(Object obj) {
        totalTimes = (TotalTimes)obj;
        if(totalTimes.getCountdownTime() != 0) {
            countdownTextField.setText(Long.toString(totalTimes.getCountdownTime()));
            countdownCheckBox.setSelected(true);
        }
        if(totalTimes.getCashAmount() != 0.0) {
            cashTextField.setText(dollarFormat.format(totalTimes.getCashAmount()));
            cashCheckBox.setSelected(true);
        }
    }    
    
    private void saveTimeOutSettings() {
        if(! countdownCheckBox.isSelected()) totalTimes.setCountdownTime(0L);
        else totalTimes.setCountdownTime(Long.parseLong(countdownTextField.getText()));
        if(! cashCheckBox.isSelected()) totalTimes.setCashAmount(0.0);
        else try{ totalTimes.setCashAmount(dollarFormat.parse(cashTextField.getText()).doubleValue()); }
        catch (java.text.ParseException e) { totalTimes.setCashAmount(0.0); }
        
        try {
            File prefsdir = new File(System.getProperty("user.home")+System.getProperty("file.separator")+"CsltComm");
            File prefsFile = new File(prefsdir, "TotalTimes.xml");
            Thread.currentThread().setContextClassLoader(totalTimes.getClass().getClassLoader()); //Sun BugID 4676532
            FileOutputStream outStream = new FileOutputStream(prefsFile);
            XMLEncoder e = new XMLEncoder(new BufferedOutputStream(outStream));
            e.writeObject(totalTimes);
            e.close();
        } catch (Exception e) {
            System.err.println("Couldn't save TotalTimes Prefs");
            e.printStackTrace(System.out);
        }
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup selectButtonGroup;
    private javax.swing.JLabel countdownLabel;
    private javax.swing.JTextField cashTextField;
    private javax.swing.JPanel optionInputPanel;
    private javax.swing.JCheckBox cashCheckBox;
    private javax.swing.JCheckBox countdownCheckBox;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JLabel cashLabel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField countdownTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel optionButtonPanel;
    // End of variables declaration//GEN-END:variables
    
}
