/*
 * CsltComm.java
 *
 * Created on May 22, 2000, 4:07 PM
 */
import java.net.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.io.InputStream;
import ClntComm;
import ChatComm;

/** 
 *
 * @author  jellis
 * @version 
 */
public class CsltComm extends javax.swing.JFrame {
static MediaTracker iconTracker;
static MTPanel iconPanel;
public static int frameNumber;
public static int imageWidth = 16;
public static int imageHeight = 4;
public static int frameDelay = 10;

  /** Creates new form CsltComm */
  public CsltComm() {
    frameNumber = 0;
      
    initComponents ();

    //Load the animated icon from the JAR file... note that we can't just to a getImage()
    //anymore - we have to input the image data as a byte stream.
    Image clockIcon = null;
    byte[] tn = null;
    InputStream in = getClass().getResourceAsStream("graphics/BlueBar.gif");
    try{
      int length = in.available();
      tn = new byte[length];
      in.read(tn);
      clockIcon = Toolkit.getDefaultToolkit().createImage(tn);
    } catch(Exception e){
      System.out.println("Error loading graphic " + e);
    }

    final ClntComm projectList = new ClntComm();
	
    mainPane.addTab("Time", null, projectList, "Project Timers");
    mainPane.addTab("List", null, new ListComm(7780), "CoWorker List");

    iconTracker = new MediaTracker(this);
    iconTracker.addImage(clockIcon, 0);

    Timer iconTimer = new Timer(frameDelay,
    new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        if(projectList.isRunning()){
          try{
            iconTracker.waitForAll();
          }catch(InterruptedException except){
            System.out.println("Error printing frames");
          }
          frameNumber++;
          iconPanel.repaint();
        }
      }
    });

    iconTimer.setInitialDelay(0);
    iconPanel = new MTPanel(clockIcon);
    iconPanel.setPreferredSize(new Dimension(imageWidth, imageHeight));
    iconPanel.setMinimumSize(new Dimension(imageWidth, imageHeight));
    iconPanel.setMaximumSize(new Dimension(1024, imageHeight));

    getContentPane().add(iconPanel);
    iconTimer.start();
    
    pack ();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
  private void initComponents () {//GEN-BEGIN:initComponents
    mainPane = new javax.swing.JTabbedPane ();
    getContentPane ().setLayout (new javax.swing.BoxLayout (getContentPane (), 1));
    setTitle ("ConsultComm 0.3.0");
    setName ("frame");
    addWindowListener (new java.awt.event.WindowAdapter () {
      public void windowClosing (java.awt.event.WindowEvent evt) {
        exitForm (evt);
      }
    }
    );



    getContentPane ().add (mainPane);

  }//GEN-END:initComponents

  /** Exit the Application */
  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    System.exit (0);
  }//GEN-LAST:event_exitForm

  /**
  * @param args the command line arguments
  */
  public static void main (String args[]) {
    new CsltComm ().show ();
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTabbedPane mainPane;
  // End of variables declaration//GEN-END:variables
class MTPanel extends JPanel {
  Image animationFrame;

  public MTPanel(Image frame) {
    animationFrame = frame;
  }

  //Draw the current frame of animation.
  public void paintComponent(Graphics g) {
    super.paintComponent(g); //paint the background
    int width = getWidth();
    int height = getHeight();

    //If not all the images are loaded,
    //just display a status string.
    if (!iconTracker.checkAll()) {
      return;
    }

    //Paint the frame into the image.
    g.drawImage(animationFrame, (CsltComm.frameNumber%(width+imageWidth))-imageWidth, 0, this);
  }
}
}